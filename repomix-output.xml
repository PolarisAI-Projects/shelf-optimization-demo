This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
app.py
data/商品.csv
data/台.csv
data/棚.csv
data/棚位置.csv
requirements.txt
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="data/商品.csv">
商品コード,飲料属性
4902102141109,お茶
4902102141123,お茶
4902102113724,お茶
4909411069100,コーラ
4514603217216,コーラ
4901340689312,コーラ
4901777088108,コーヒー
4901870169230,お茶
4901870169254,お茶
4902102075060,コーラ
4902102151023,コーヒー
4902102151566,コーヒー
4901777300521,コーヒー
4901777278639,お茶
4901085161982,お茶
4901085613580,お茶
4902102118644,コーラ
4902102133975,コーラ
4902102147309,お茶
4902102074728,コーラ
4902102107341,お茶
4902102107860,お茶
4902102114349,コーラ
4901777204980,コーヒー
4901777235434,コーヒー
4901777235298,コーヒー
4909411083342,コーラ
4901201208096,コーラ
4514603284317,コーラ
4901777235335,コーヒー
4514603360912,コーラ
4902102132473,コーラ
4902102151573,コーヒー
4901777300545,コーヒー
4902102072618,コーラ
4909411089368,コーラ
4909411088453,コーラ
4902102136662,コーラ
4901777391581,コーヒー
4901777349926,コーヒー
4901777269378,お茶
4901777231672,お茶
4902102151382,コーヒー
4902102151368,コーヒー
4902102138680,お茶
4902102150521,お茶
4902102150545,お茶
4902102077354,コーラ
4902102084178,コーラ
4514603263213,コーラ
4901340064645,コーラ
4901777361256,コーヒー
4902102076579,コーラ
4514603431919,コーラ
4514603430417,コーラ
4901340689213,コーラ
4909411089320,コーラ
4589850829062,コーヒー
4901777232310,お茶
4901777232297,お茶
4909411085551,コーラ
4589850826214,コーヒー
4901777393219,コーヒー
4901777392168,コーヒー
4901777380004,コーヒー
4901777375901,コーヒー
4909411090210,コーラ
4902102136716,お茶
4909411084950,コーラ
4901777300446,コーヒー
4909411073114,コーラ
4901777271951,お茶
4901777375864,コーヒー
4909411090234,コーラ
4902102107648,お茶
4901777301078,コーヒー
4901777301092,コーヒー
4901777375826,コーヒー
4909411084875,コーラ
4909411085650,コーラ
4582409175191,コーヒー
4902555207032,お茶
4901777392182,コーヒー
4909411084790,コーラ
4909411088538,コーラ
4901870172865,お茶
4902102119443,コーラ
4901777361294,コーヒー
4901085003800,お茶
4901777392694,コーヒー
</file>

<file path="data/台.csv">
台番号,台高さ,台幅,台奥行
1,1200,900,730
2,1200,920,730
3,1200,920,730
4,1200,1220,730
5,1200,1220,730
6,1200,800,730
</file>

<file path="data/棚.csv">
台番号,棚段番号,棚高さ,棚幅,棚奥行,棚厚さ
1,1,150,900,730,5
1,2,580,900,430,20
1,3,927,900,430,20
2,1,150,920,730,5
2,2,400,920,430,20
2,3,620,920,380,20
2,4,800,920,330,20
2,5,970,920,330,20
3,1,150,920,730,5
3,2,400,920,430,20
3,3,650,920,430,20
3,4,900,920,330,20
4,1,150,1220,730,5
4,2,400,1220,430,20
4,3,650,1220,430,20
4,4,900,1220,330,20
5,1,150,1220,730,5
5,2,400,1220,430,20
5,3,650,1220,430,20
5,4,900,1220,330,20
6,1,150,800,730,5
6,2,400,800,430,20
6,3,650,800,430,20
6,4,900,800,330,20
</file>

<file path="data/棚位置.csv">
台番号,棚段番号,棚位置,商品コード,フェース数,在庫数量,奥行陳列数
1,1,1,4902102141109,3,12,
1,1,2,4902102141123,3,12,
1,1,3,4902102113724,3,12,
1,2,1,4909411069100,3,24,
1,2,2,4514603217216,3,12,
1,2,3,4901340689312,3,15,
1,3,1,4901777088108,3,12,
1,3,2,4901870169230,3,24,
1,3,3,4901870169254,2,16,
2,1,1,4902102075060,4,40,10
2,1,2,4902102151023,4,40,10
2,1,3,4902102151566,5,50,10
2,1,4,4901777300521,1,16,
2,2,1,4901777278639,3,18,
2,2,2,4901085161982,3,18,
2,2,3,4901085613580,3,18,
2,2,4,4902102118644,3,18,
2,2,5,4902102133975,2,14,
2,3,1,4902102147309,3,21,
2,3,2,4902102074728,3,21,
2,3,3,4902102107341,4,28,
2,3,4,4902102107860,4,28,
2,3,5,4902102114349,3,21,
2,4,1,4901777204980,4,24,
2,4,2,4901777235434,4,24,
2,4,3,4901777235298,4,24,
2,4,4,4909411083342,4,24,
2,5,1,4901201208096,3,18,
2,5,2,4514603284317,4,24,
2,5,3,4901777235335,3,18,
2,5,4,4514603360912,4,24,
2,5,5,4902102132473,3,18,
3,1,1,4901777300521,3,16,
3,1,2,4902102151573,5,20,
3,1,3,4901777300545,4,16,
3,1,4,4902102072618,1,60,
3,2,1,4902102133975,1,14,
3,2,2,4909411089368,4,16,
3,2,3,4909411088453,4,16,
3,2,4,4902102136662,4,16,
3,3,1,4901777391581,3,15,
3,3,2,4901777349926,4,16,
3,3,3,4901777269378,4,20,
3,3,4,4901777231672,4,22,
3,4,1,4902102151382,3,15,5
3,4,2,4902102151368,3,15,5
3,4,3,4902102138680,3,12,4
3,4,4,4902102150521,3,15,5
3,4,5,4902102150545,3,15,5
3,4,6,4902102077354,1,16,4
4,1,1,4902102072618,5,60,10
4,1,2,4902102084178,5,50,10
4,1,3,4514603263213,5,55,11
4,1,4,4901340064645,4,48,12
4,2,1,4901777361256,4,24,6
4,2,2,4902102076579,4,24,6
4,2,3,4514603431919,4,24,6
4,2,4,4514603430417,4,24,6
4,2,5,4901340689213,2,28,7
4,3,1,4909411089320,4,24,
4,3,2,4589850829062,4,24,
4,3,3,4901777232310,4,24,
4,3,4,4901777232297,4,24,
4,3,5,4909411085551,2,24,
4,4,1,4902102077354,3,16,4
4,4,2,4589850826214,4,16,4
4,4,3,4901777393219,4,16,4
4,4,4,4901777392168,4,16,4
4,4,5,4901777380004,2,16,4
5,1,1,4901777375901,4,40,10
5,1,2,4909411090210,4,48,12
5,1,3,4902102136716,4,40,10
5,1,4,4909411084950,4,48,12
5,1,5,4901777300446,3,66,11
5,2,1,4901340689213,2,28,7
5,2,2,4909411073114,4,28,7
5,2,3,4901777271951,4,28,7
5,2,4,4901777375864,4,20,5
5,2,5,4909411090234,4,24,6
5,2,6,4902102107648,1,36,6
5,3,1,4909411085551,2,24,
5,3,2,4901777301078,4,28,
5,3,3,4901777301092,4,28,
5,3,4,4901777375826,4,20,
5,3,5,4909411084875,4,28,
5,3,6,4909411085650,1,24,
5,4,1,4901777380004,2,16,4
5,4,2,4582409175191,4,20,5
5,4,3,4902555207032,4,20,5
5,4,4,4901777392182,4,16,4
5,4,5,4909411084790,4,20,5
5,4,6,4909411088538,1,20,5
6,1,1,4901777300446,3,66,11
6,1,2,4901870172865,5,60,12
6,1,3,4902102119443,4,40,10
6,2,1,4902102107648,5,36,6
6,2,2,4901777361294,7,35,5
6,3,1,4909411085650,6,24,
6,3,2,4901085003800,5,30,
6,4,1,4909411088538,5,20,5
6,4,2,4901777392694,7,35,5
</file>

<file path="app.py">
import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.patches as patches
import japanize_matplotlib  # 日本語表示を有効化
import os

# --- アプリの基本設定 ---
st.set_page_config(layout="wide")
st.title('棚割り最適化デモ')

# --- ローカルファイルの読み込み ---
DATA_DIR = 'data'
try:
    df_base = pd.read_csv(os.path.join(DATA_DIR, '台.csv'))
    df_shelf = pd.read_csv(os.path.join(DATA_DIR, '棚.csv'))
    df_position = pd.read_csv(os.path.join(DATA_DIR, '棚位置.csv'))
    df_master = pd.read_csv(os.path.join(DATA_DIR, '商品.csv'))
    st.success(f'`{DATA_DIR}/` フォルダからファイルを正常に読み込みました。')
    is_file_loaded = True
except FileNotFoundError as e:
    st.error(f"エラー: {e}. `data` フォルダにCSVファイルがあるか確認してください。")
    is_file_loaded = False


def visualize_store_layout(df_position, df_master):
    """
    店全体の棚レイアウトを台ごとに、統一された固定幅で描画する関数
    """
    if 'max_faces_info' not in st.session_state:
        max_faces_info = df_position.groupby(['台番号', '棚段番号'])['フェース数'].sum().reset_index()
        max_faces_info = max_faces_info.rename(columns={'フェース数': '最大フェース数'})
        st.session_state['max_faces_info'] = max_faces_info
        
        with st.expander("各棚段の最大フェース数（キャパシティ）"):
            st.dataframe(max_faces_info)

    df_merged = pd.merge(df_position, df_master, on='商品コード', how='left')
    
    color_map = {
        'お茶': 'green', 'コーヒー': 'black', 'コーラ': 'red', '水': 'blue'
    }
    df_merged['色'] = df_merged['飲料属性'].map(color_map).fillna('grey')

    dai_groups = df_merged.groupby('台番号')

    for daiban, dai_group in dai_groups:
        st.header(f'台番号: {daiban}')

        # --- ★★★ 変更点①: この台の「統一された横幅」を計算 ★★★ ---
        # この台に属する棚段の中で、最も大きい「最大フェース数」を取得する
        dai_max_width = st.session_state['max_faces_info'][
            st.session_state['max_faces_info']['台番号'] == daiban
        ]['最大フェース数'].max()
        
        tandans = sorted(dai_group['棚段番号'].unique())
        num_tandans = len(tandans)

        fig, axes = plt.subplots(
            nrows=num_tandans, ncols=1, 
            figsize=(12, 1.8 * num_tandans), squeeze=False
        )
        
        for i, tandan in enumerate(tandans):
            ax = axes[i][0]
            tandan_group = dai_group[dai_group['棚段番号'] == tandan]
            
            # --- ★★★ 変更点②: グラフの横幅を台の統一幅に固定 ★★★ ---
            ax.set_xlim(0, dai_max_width)

            current_pos = 0
            for _, row in tandan_group.sort_values('棚位置').iterrows():
                face_count = row['フェース数']
                color = row['色']
                attribute = row['飲料属性'] if pd.notna(row['飲料属性']) else '不明'
                
                rect = patches.Rectangle(
                    (current_pos, 0), face_count, 1, 
                    linewidth=1.5, edgecolor='black', facecolor=color, alpha=0.8
                )
                ax.add_patch(rect)
                
                ax.text(
                    current_pos + face_count / 2, 0.5,
                    f"{attribute}\n({face_count}フェイス)",
                    ha='center', va='center', color='white', fontsize=9, weight='bold'
                )
                current_pos += face_count

            # --- ★★★ 変更点③: 空きスペースの計算基準を台の統一幅に変更 ★★★ ---
            empty_width = dai_max_width - current_pos
            if empty_width > 0:
                rect_empty = patches.Rectangle(
                    (current_pos, 0), empty_width, 1,
                    facecolor='none', edgecolor='gray', linestyle='--', linewidth=1
                )
                ax.add_patch(rect_empty)
                ax.text(
                    current_pos + empty_width / 2, 0.5, "空き",
                    ha='center', va='center', color='gray', fontsize=10
                )
                
            ax.set_ylim(0, 1)
            ax.set_ylabel(f'棚段 {tandan}', rotation=0, ha='right', va='center', fontsize=12)
            ax.set_xticks(range(0, dai_max_width + 1))
            ax.set_yticks([])

        for i in range(num_tandans - 1):
            axes[i][0].set_xlabel('')
        axes[-1][0].set_xlabel('フェース位置')

        plt.tight_layout(pad=2.0)
        st.pyplot(fig)


# --- メイン処理 ---
if is_file_loaded:
    st.markdown('### 現在の棚レイアウト')
    visualize_store_layout(df_position, df_master)
</file>

<file path="requirements.txt">
streamlit
pandas
matplotlib
japanize-matplotlib
</file>

</files>
